/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import Control.ControlCategorias;
import Control.ControlCliente;
import Control.ControlProductos;
import Control.ControlProveedores;
import Control.ControlVenta;
import Control.ControlRel_productosVentas;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import objetosNegocio.Categoria;
import objetosNegocio.Cliente;
import objetosNegocio.Producto;
import objetosNegocio.Proveedor;
import objetosNegocio.Rel_ProductoVenta;
import objetosNegocio.Venta;

/**
 *
 * @author miran
 */
public class FrmRegistroVenta extends javax.swing.JFrame {

    private ControlCategorias controlCategorias;
    private ControlProveedores controlProveedores;
    private ControlCliente controlClientes;
    private ControlVenta controlVentas;
    private ControlProductos controlProductos;
    private ControlRel_productosVentas controlRel_productosVentas;
    private List<Producto> listaProductos;

    private float subTotal;
    private float montoTotal;

    /**
     * Creates new form FrmVenta
     */
    public FrmRegistroVenta() {
        initComponents();
        this.setTitle("FrmRegistroVenta");
        this.setLocationRelativeTo(null);
        this.quitarAdvertencias();
        this.controlProveedores = new ControlProveedores();
        this.controlCategorias = new ControlCategorias();
        this.controlClientes = new ControlCliente();
        this.controlVentas = new ControlVenta();
        this.controlProductos = new ControlProductos();
        this.controlRel_productosVentas = new ControlRel_productosVentas();
        this.controlVentas = new ControlVenta();
        this.listaProductos = new ArrayList<>();
        this.llenarCboxClientes();
        this.limpiarCampos();
        this.llenarLista();
        this.llenarTablasProductos();
        this.cargarDetalleVenta();
        this.subTotal = 0;
        this.montoTotal = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendarPanel1 = new com.github.lgooddatepicker.components.CalendarPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblp = new javax.swing.JLabel();
        producto = new javax.swing.JLabel();
        lblpro = new javax.swing.JLabel();
        categoria = new javax.swing.JLabel();
        lblcat = new javax.swing.JLabel();
        cliente = new javax.swing.JLabel();
        lblcliente = new javax.swing.JLabel();
        ventas = new javax.swing.JLabel();
        lblve = new javax.swing.JLabel();
        proveedor = new javax.swing.JLabel();
        lblMontoTotal = new javax.swing.JPanel();
        txtSubtotal = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        btGuardar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        txtMonto = new javax.swing.JTextField();
        cboxClientes = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        lblCboxClientes = new javax.swing.JLabel();
        lblDescuento = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        btAceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductosSeleccionados = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        x = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 0, 102));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel3.setBackground(new java.awt.Color(255, 204, 255));

        lblp.setText("Proveedores");
        lblp.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        lblp.setForeground(new java.awt.Color(102, 102, 102));
        lblp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblpMouseExited(evt);
            }
        });

        producto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/canasta72.png"))); // NOI18N
        producto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                productoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                productoMouseExited(evt);
            }
        });

        lblpro.setText("Productos");
        lblpro.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        lblpro.setForeground(new java.awt.Color(102, 102, 102));
        lblpro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblproMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblproMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblproMouseExited(evt);
            }
        });

        categoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tomate72.png"))); // NOI18N
        categoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoriaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                categoriaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                categoriaMouseExited(evt);
            }
        });

        lblcat.setText("Categorias");
        lblcat.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        lblcat.setForeground(new java.awt.Color(102, 102, 102));
        lblcat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblcatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblcatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblcatMouseExited(evt);
            }
        });

        cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/clientes72.png"))); // NOI18N
        cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clienteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clienteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clienteMouseExited(evt);
            }
        });

        lblcliente.setText("Clientes");
        lblcliente.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        lblcliente.setForeground(new java.awt.Color(102, 102, 102));
        lblcliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblclienteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblclienteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblclienteMouseExited(evt);
            }
        });

        ventas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ticket72.png"))); // NOI18N
        ventas.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        ventas.setToolTipText("");
        ventas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ventasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ventasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ventasMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ventasMousePressed(evt);
            }
        });

        lblve.setText("Ventas");
        lblve.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        lblve.setForeground(new java.awt.Color(102, 102, 102));
        lblve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblveMouseExited(evt);
            }
        });

        proveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/camion72.png"))); // NOI18N
        proveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                proveedorMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                proveedorMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                proveedorMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(producto)
                            .addComponent(categoria)
                            .addComponent(lblcat)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblcliente)
                                    .addComponent(cliente)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblve)
                                        .addComponent(ventas))))
                            .addComponent(lblpro)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(proveedor))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblp)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblp)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(producto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblpro)
                .addGap(18, 18, 18)
                .addComponent(categoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblcat)
                .addGap(18, 18, 18)
                .addComponent(cliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblcliente)
                .addGap(18, 18, 18)
                .addComponent(ventas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblve)
                .addGap(38, 38, 38))
        );

        lblMontoTotal.setBackground(new java.awt.Color(255, 255, 255));
        lblMontoTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 255), 2));
        lblMontoTotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblMontoTotalPropertyChange(evt);
            }
        });

        txtSubtotal.setEditable(false);
        txtSubtotal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sub total", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        txtDescuento.setText("0");
        txtDescuento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Descuento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        txtDescuento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescuentoFocusLost(evt);
            }
        });
        txtDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescuentoActionPerformed(evt);
            }
        });
        txtDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyTyped(evt);
            }
        });

        btGuardar.setText("Guardar");
        btGuardar.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        btGuardar.setForeground(new java.awt.Color(102, 102, 102));
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        btCancelar.setForeground(new java.awt.Color(102, 102, 102));
        btCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCancelarMouseClicked(evt);
            }
        });

        txtMonto.setEditable(false);
        txtMonto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Monto total", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        jLabel6.setText("Cliente");
        jLabel6.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));

        lblCboxClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exc.png"))); // NOI18N

        lblDescuento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exc.png"))); // NOI18N

        javax.swing.GroupLayout lblMontoTotalLayout = new javax.swing.GroupLayout(lblMontoTotal);
        lblMontoTotal.setLayout(lblMontoTotalLayout);
        lblMontoTotalLayout.setHorizontalGroup(
            lblMontoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblMontoTotalLayout.createSequentialGroup()
                .addGroup(lblMontoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lblMontoTotalLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(lblMontoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lblMontoTotalLayout.createSequentialGroup()
                                .addGroup(lblMontoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(lblMontoTotalLayout.createSequentialGroup()
                                        .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtDescuento, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMonto, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(lblMontoTotalLayout.createSequentialGroup()
                                .addComponent(cboxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCboxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(lblMontoTotalLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel6)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        lblMontoTotalLayout.setVerticalGroup(
            lblMontoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblMontoTotalLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(lblMontoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCboxClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboxClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(lblMontoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescuento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(lblMontoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 255), 2));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lupaRosa.png"))); // NOI18N

        txtBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Búsqueda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        btAceptar.setText("Aceptar");
        btAceptar.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        btAceptar.setForeground(new java.awt.Color(102, 102, 102));
        btAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAceptarMouseClicked(evt);
            }
        });
        btAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarActionPerformed(evt);
            }
        });

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id producto", "Nombre", "Precio actual", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setText("Detalles de ventas");
        jLabel3.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 102));

        jLabel4.setText("Buscador de productos");
        jLabel4.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 102));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 255), 2));

        tblProductosSeleccionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id producto", "Nombre", "Precio actual", "Cantidad", "Monto total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductosSeleccionados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosSeleccionadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProductosSeleccionados);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel5.setText("Productos seleccionados");
        jLabel5.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lblMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        x.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/homeBlanco.png"))); // NOI18N
        x.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                xMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                xMouseExited(evt);
            }
        });
        x.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                xKeyPressed(evt);
            }
        });

        jLabel1.setText("Registro de ventas");
        jLabel1.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(x)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(x)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblpMouseEntered
        proveedor.setIcon(new ImageIcon("imagenes\\camion72n.png"));
        lblp.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblpMouseEntered

    private void lblpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblpMouseExited
        proveedor.setIcon(new ImageIcon("imagenes\\camion72.png"));
        lblp.setForeground(Color.GRAY);
    }//GEN-LAST:event_lblpMouseExited

    private void productoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMouseEntered
        producto.setIcon(new ImageIcon("imagenes\\canasta72n.png"));
        lblpro.setForeground(Color.BLACK);
    }//GEN-LAST:event_productoMouseEntered

    private void productoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMouseExited
        producto.setIcon(new ImageIcon("imagenes\\canasta72.png"));
        lblpro.setForeground(Color.GRAY);
    }//GEN-LAST:event_productoMouseExited

    private void lblproMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblproMouseEntered
        producto.setIcon(new ImageIcon("imagenes\\canasta72n.png"));
        lblpro.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblproMouseEntered

    private void lblproMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblproMouseExited
        producto.setIcon(new ImageIcon("imagenes\\canasta72.png"));
        lblpro.setForeground(Color.GRAY);
    }//GEN-LAST:event_lblproMouseExited

    private void categoriaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoriaMouseEntered
        categoria.setIcon(new ImageIcon("imagenes\\tomate72n.png"));
        lblcat.setForeground(Color.BLACK);
    }//GEN-LAST:event_categoriaMouseEntered

    private void categoriaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoriaMouseExited
        categoria.setIcon(new ImageIcon("imagenes\\tomate72.png"));
        lblcat.setForeground(Color.GRAY);
    }//GEN-LAST:event_categoriaMouseExited

    private void lblcatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblcatMouseEntered
        categoria.setIcon(new ImageIcon("imagenes\\tomate72n.png"));
        lblcat.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblcatMouseEntered

    private void lblcatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblcatMouseExited
        categoria.setIcon(new ImageIcon("imagenes\\tomate72.png"));
        lblcat.setForeground(Color.GRAY);
    }//GEN-LAST:event_lblcatMouseExited

    private void clienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clienteMouseEntered
        cliente.setIcon(new ImageIcon("imagenes\\cliente72n.png"));
        lblcliente.setForeground(Color.BLACK);
    }//GEN-LAST:event_clienteMouseEntered

    private void clienteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clienteMouseExited
        cliente.setIcon(new ImageIcon("imagenes\\clientes72.png"));
        lblcliente.setForeground(Color.GRAY);
    }//GEN-LAST:event_clienteMouseExited

    private void lblclienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblclienteMouseEntered
        cliente.setIcon(new ImageIcon("imagenes\\cliente72n.png"));
        lblcliente.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblclienteMouseEntered

    private void lblclienteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblclienteMouseExited
        cliente.setIcon(new ImageIcon("imagenes\\clientes72.png"));
        lblcliente.setForeground(Color.GRAY);
    }//GEN-LAST:event_lblclienteMouseExited

    private void ventasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ventasMouseEntered
        ventas.setIcon(new ImageIcon("imagenes\\ticket72n.png"));
        lblve.setForeground(Color.BLACK);
    }//GEN-LAST:event_ventasMouseEntered

    private void ventasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ventasMouseExited
        ventas.setIcon(new ImageIcon("imagenes\\ticket72.png"));
        lblve.setForeground(Color.GRAY);
    }//GEN-LAST:event_ventasMouseExited

    private void ventasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ventasMousePressed

    }//GEN-LAST:event_ventasMousePressed

    private void lblveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblveMouseEntered
        ventas.setIcon(new ImageIcon("imagenes\\ticket72n.png"));
        lblve.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblveMouseEntered

    private void lblveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblveMouseExited
        ventas.setIcon(new ImageIcon("imagenes\\ticket72.png"));
        lblve.setForeground(Color.GRAY);
    }//GEN-LAST:event_lblveMouseExited

    private void proveedorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proveedorMouseEntered
        proveedor.setIcon(new ImageIcon("imagenes\\camion72n.png"));
        lblp.setForeground(Color.BLACK);
    }//GEN-LAST:event_proveedorMouseEntered

    private void proveedorMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proveedorMouseExited
        proveedor.setIcon(new ImageIcon("imagenes\\camion72.png"));
        lblp.setForeground(Color.GRAY);
    }//GEN-LAST:event_proveedorMouseExited

    private void txtDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescuentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescuentoActionPerformed

    private void lblMontoTotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblMontoTotalPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lblMontoTotalPropertyChange

    private void xMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseClicked
        FrmInicio menu = new FrmInicio();
        this.dispose();
        menu.setVisible(true);
    }//GEN-LAST:event_xMouseClicked

    private void xMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseEntered
        x.setIcon(new ImageIcon("imagenes\\homeNegro.png"));
    }//GEN-LAST:event_xMouseEntered

    private void xMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseExited
        x.setIcon(new ImageIcon("imagenes\\homeBlanco.png"));
    }//GEN-LAST:event_xMouseExited

    private void xKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_xKeyPressed

    }//GEN-LAST:event_xKeyPressed

    private void proveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proveedorMouseClicked
        FrmProveedor p = new FrmProveedor();
        this.dispose();
        p.setVisible(true);
    }//GEN-LAST:event_proveedorMouseClicked

    private void productoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMouseClicked
        if (!hayCategoria()) {
            if (!hayProveedor()) {
                FrmProducto producto = new FrmProducto();
                this.dispose();
                producto.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No existe ningún proveedor", "Información", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No existe ninguna categoria", "Información", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_productoMouseClicked

    private void lblproMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblproMouseClicked
        if (!hayCategoria()) {
            if (!hayProveedor()) {
                FrmProducto producto = new FrmProducto();
                this.dispose();
                producto.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No existe ningún proveedor", "Información", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No existe ninguna categoria", "Información", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_lblproMouseClicked

    private void categoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoriaMouseClicked
        if (!hayCliente()) {
            if (!hayProveedor()) {
                FrmCategoria cat = new FrmCategoria();
                this.dispose();
                cat.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No existe ningún proveedor", "Información", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No existe ningun cliente registrado", "Información", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_categoriaMouseClicked

    private void lblcatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblcatMouseClicked
        if (!hayCliente()) {
            if (!hayProveedor()) {
                FrmCategoria cat = new FrmCategoria();
                this.dispose();
                cat.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No existe ningún proveedor", "Información", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No existe ningun cliente registrado", "Información", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_lblcatMouseClicked

    private void ventasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ventasMouseClicked
        if (!hayCliente()) {
            if (!hayVenta()) {
                FrmVenta v = new FrmVenta();
                this.dispose();
                v.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No existe ninguna venta registrada", "Información", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No existe ningún cliente registrado", "Información", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_ventasMouseClicked

    private void lblveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblveMouseClicked
        if (!hayCliente()) {
            if (!hayVenta()) {
                FrmVenta v = new FrmVenta();
                this.dispose();
                v.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No existe ninguna venta registrada", "Información", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No existe ningún cliente registrado", "Información", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_lblveMouseClicked

    private void clienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clienteMouseClicked
        FrmCliente c = new FrmCliente();
        this.dispose();
        c.setVisible(true);
    }//GEN-LAST:event_clienteMouseClicked

    private void lblclienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblclienteMouseClicked
        FrmCliente c = new FrmCliente();
        this.dispose();
        c.setVisible(true);
    }//GEN-LAST:event_lblclienteMouseClicked

    private void lblpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblpMouseClicked
        FrmProveedor p = new FrmProveedor();
        this.dispose();
        p.setVisible(true);
    }//GEN-LAST:event_lblpMouseClicked

    private void btAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarActionPerformed
        this.buscarLike();
    }//GEN-LAST:event_btAceptarActionPerformed

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        this.guardarRegistroVenta();
        this.limpiarCampos();
    }//GEN-LAST:event_btGuardarActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        if (evt.getClickCount() >= 2) {
            this.llenarTablaSeleccionados();
        }
    }//GEN-LAST:event_tblProductosMouseClicked

    private void btAceptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAceptarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btAceptarMouseClicked

    private void tblProductosSeleccionadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosSeleccionadosMouseClicked
        if (evt.getClickCount() >= 2) {
            this.regresarProducto();
        }
    }//GEN-LAST:event_tblProductosSeleccionadosMouseClicked

    private void btCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCancelarMouseClicked
        this.limpiarCampos();
    }//GEN-LAST:event_btCancelarMouseClicked

    private void txtDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            evt.consume();
        }
        if (evt.getKeyChar() == '.' && txtDescuento.getText().contains(".")) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDescuentoKeyTyped

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        if (txtBusqueda.getText().length() == 15) {
            evt.consume();
        }
        if (!Character.isDigit(evt.getKeyChar())) {
            if (!Character.isLetter(evt.getKeyChar())) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void txtDescuentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyReleased
        this.calcularMontoTotal();
    }//GEN-LAST:event_txtDescuentoKeyReleased

    private void txtDescuentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescuentoFocusLost
        if(this.txtDescuento.getText().isEmpty() || this.txtDescuento.getText().equals("")){
            this.txtDescuento.setText("0");
        }
    }//GEN-LAST:event_txtDescuentoFocusLost

    private boolean hayProducto() {
        List<Producto> listaProductos = controlProductos.buscarTodas("");
        if (listaProductos.isEmpty()) {
            return true;
        }
        return false;
    }

    private boolean hayVenta() {
        List<Venta> listaVentas = controlVentas.buscarTodas("");
        if (listaVentas.isEmpty()) {
            return true;
        }
        return false;
    }

    private boolean hayProveedor() {
        List<Proveedor> listaProveedores = controlProveedores.buscarTodas("");
        if (listaProveedores.isEmpty()) {
            return true;
        }
        return false;
    }

    private boolean hayCliente() {
        List<Cliente> listaClientes = controlClientes.buscarTodas("");
        if (listaClientes.isEmpty()) {
            return true;
        }
        return false;
    }

    private boolean hayCategoria() {
        List<Categoria> listaCategoria = controlCategorias.buscarTodas("");
        if (listaCategoria.isEmpty()) {
            return true;
        }
        return false;
    }

    private void guardarRegistroVenta() {
        if (!camposVacios()) {
            DefaultTableModel modelo = (DefaultTableModel) tblProductosSeleccionados.getModel();
            if (modelo.getRowCount() != 0) {
                Cliente cliente = (Cliente) this.cboxClientes.getSelectedItem();
               this.calcularMontoTotal();
                Float descuento = Float.parseFloat(this.txtDescuento.getText());
                Float montoTotal = Float.parseFloat(this.txtMonto.getText());
                Date fecha = new Date();
                Venta venta = new Venta(fecha, descuento, montoTotal, cliente);
                List<Rel_ProductoVenta> detallesVenta = this.detallesVenta(venta);
                for (Rel_ProductoVenta rel_ProductoVenta : detallesVenta) {
                    venta.addRel_productoventa(rel_ProductoVenta);
                }
                if (controlVentas.guardar(venta)) {
                    for (Producto lproductos : listaProductos) {
                        this.controlProductos.actualizar(lproductos);
                    }
                     this.limpiarCampos();
                    JOptionPane.showMessageDialog(this, "Venta realizada.",
                            "Hecho", JOptionPane.INFORMATION_MESSAGE);
                   
                } else {
                    JOptionPane.showMessageDialog(this, "Error al guardar la venta.",
                            "Precaución", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Debe de haber por lo menos 1 producto seleccionado.",
                        "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Todos los campos deben de estar llenos.",
                    "Precaución", JOptionPane.WARNING_MESSAGE);
        }

    }

    private List<Rel_ProductoVenta> detallesVenta(Venta venta) {
        DefaultTableModel modelo = (DefaultTableModel) tblProductosSeleccionados.getModel();
        List<Rel_ProductoVenta> detallesDeVentas = new ArrayList<>();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            Rel_ProductoVenta rel_ProductoVenta = new Rel_ProductoVenta();
            Producto producto = controlProductos.buscarporID((Integer) modelo.getValueAt(i, 0));
            rel_ProductoVenta.setPrecio(producto.getprecioactual());
            rel_ProductoVenta.setCantidad((Integer) modelo.getValueAt(i, 3));
            rel_ProductoVenta.setMontoTotal((Float) modelo.getValueAt(i, 4));
            rel_ProductoVenta.setProducto(producto);
            rel_ProductoVenta.setVenta(venta);
            detallesDeVentas.add(rel_ProductoVenta);
        }
        return detallesDeVentas;
    }

    private boolean camposVacios() {
        boolean hayVacios = false;
        if (Float.parseFloat(this.txtSubtotal.getText()) <= 0) {
            hayVacios = true;
            this.lblDescuento.setVisible(true);
        } else {
            this.lblDescuento.setVisible(false);
        }

        if (this.cboxClientes.getSelectedIndex() == 0) {
            hayVacios = true;
            this.lblCboxClientes.setVisible(true);
        } else {
            this.lblCboxClientes.setVisible(false);
        }
        return hayVacios;
    }

    private void quitarAdvertencias() {
        this.lblCboxClientes.setVisible(false);
        this.lblDescuento.setVisible(false);
    }

    private void buscarLike() {
        List<Producto> productosLike = controlProductos.buscarLike(this.txtBusqueda.getText());
        DefaultTableModel modelo = (DefaultTableModel) tblProductos.getModel();
        modelo.setRowCount(0);
        for (Producto pLike : productosLike) {
            Producto producto = this.buscarEnLista(pLike.getIdproducto());
            if (producto != null) {
                if (producto.getStock() > 0) {
                    modelo.addRow(producto.toArray());
                }
            }
        }

    }

    public float subTotal() {
        int cont = tblProductos.getColumnCount();
        for (int i = 0; i < cont; i++) {
            subTotal = subTotal + Float.parseFloat(tblProductos.getValueAt(i, 3).toString());
        }
        return subTotal;
    }

    private void llenarTablaSeleccionados() {
        int fila = this.tblProductos.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) tblProductos.getModel();
        DefaultTableModel modeloSeleccionado = (DefaultTableModel) tblProductosSeleccionados.getModel();
        int id = (Integer) modelo.getValueAt(fila, 0);
        int filaExistente = this.productoEnTabla(id, 0);
        float mTotal = 0;
        Producto producto = this.buscarEnLista(id);
        if (filaExistente != -1) {
            int cantidad = (Integer) modeloSeleccionado.getValueAt(filaExistente, 3);
            cantidad += 1;
            mTotal = (Float) modeloSeleccionado.getValueAt(filaExistente, 2);
            mTotal *= cantidad;
            modeloSeleccionado.setValueAt(cantidad, filaExistente, 3);
            modeloSeleccionado.setValueAt(mTotal, filaExistente, 4);
            this.subTotal += (Float) modeloSeleccionado.getValueAt(filaExistente, 2);
        } else {
            modeloSeleccionado.setRowCount(modeloSeleccionado.getRowCount());
            this.subTotal += producto.getprecioactual();
            if (producto != null) {
                Object[] detalle = new Object[5];
                detalle[0] = producto.getIdproducto();
                detalle[1] = producto.getNombre();
                detalle[2] = producto.getprecioactual();
                detalle[3] = 1;
                detalle[4] = producto.getprecioactual();
                modeloSeleccionado.addRow(detalle);
            }
        }
        producto.setStock(producto.getStock() - 1);
        this.listaProductos.set(listaProductos.indexOf(producto), producto);
        this.txtSubtotal.setText(String.valueOf(this.subTotal));
        this.calcularMontoTotal();
        this.llenarTablasProductos();
    }

    private void regresarProducto() {
        int fila = this.tblProductosSeleccionados.getSelectedRow();
        DefaultTableModel modeloSeleccionado = (DefaultTableModel) tblProductosSeleccionados.getModel();
        DefaultTableModel modelo = (DefaultTableModel) tblProductos.getModel();
        int id = (Integer) modeloSeleccionado.getValueAt(fila, 0);
        int filaExistente = this.productoEnTabla(id, 1);
        Producto producto = this.buscarEnLista(id);
        this.subTotal -= producto.getprecioactual();
        if (filaExistente != -1) {
            if (this.eliminarDeTablaProductos(fila)) {
                modeloSeleccionado.removeRow(fila);
            } else {
                int cantidad = (Integer) modeloSeleccionado.getValueAt(fila, 3);
                cantidad -= 1;
                float montoTotal = producto.getprecioactual() * cantidad;
                modeloSeleccionado.setValueAt(cantidad, fila, 3);
                modeloSeleccionado.setValueAt(montoTotal, fila, 4);
            }
        } else {
            modelo.setRowCount(modelo.getRowCount());
            if (producto != null) {
                Object[] detalle = new Object[5];
                detalle[0] = producto.getIdproducto();
                detalle[1] = producto.getNombre();
                detalle[2] = producto.getprecioactual();
                detalle[3] = 1;
                detalle[4] = producto.getprecioactual();
                modelo.addRow(detalle);
            }
            int cantidad = (Integer) modeloSeleccionado.getValueAt(fila, 3);
            cantidad -= 1;
            float montoTotal = producto.getprecioactual() * cantidad;
            modeloSeleccionado.setValueAt(cantidad, fila, 3);
            modeloSeleccionado.setValueAt(montoTotal, fila, 4);
            /*
                Falta un else para advertir como esta el asunto xD            
             */
        }
        producto.setStock(producto.getStock() + 1);
        this.listaProductos.set(listaProductos.indexOf(producto), producto);
        this.txtSubtotal.setText(String.valueOf(this.subTotal));
        this.calcularMontoTotal();
        this.llenarTablasProductos();
    }

    private Producto buscarEnLista(int id) {
        for (Producto producto : listaProductos) {
            if (producto.getIdproducto() == id) {
                return producto;
            }
        }
        return null;
    }

    private void calcularMontoTotal() {
            if (this.txtDescuento.getText().isEmpty() || this.txtDescuento.getText().equals("")) {
            this.montoTotal = this.subTotal;
        } else {
            if(this.subTotal==0){       
                this.txtDescuento.setText("0");
                this.montoTotal=0;
            }else{
                float descuento = Float.parseFloat(this.txtDescuento.getText());
                if(descuento<=this.subTotal){
                    this.montoTotal = this.subTotal - descuento;
                }else{
                    JOptionPane.showMessageDialog(this, "El descuento no puede exceder el subtotal.",
                    "Advertencia", JOptionPane.WARNING_MESSAGE);
                    this.txtDescuento.setText("");
                }                
            }
        }       
        this.txtMonto.setText(String.valueOf(this.montoTotal)); 
    }

    private int productoEnTabla(int id, int tabla) {
        int fila = -1;
        if (tabla == 0) {
            for (int i = 0; i < tblProductosSeleccionados.getRowCount(); i++) {
                int fi = (Integer) tblProductosSeleccionados.getValueAt(i, 0);
                if (fi == id) {
                    fila = i;
                    break;
                }
            }
        } else if (tabla == 1) {
            for (int i = 0; i < tblProductos.getRowCount(); i++) {
                int fi = (Integer) tblProductos.getValueAt(i, 0);
                if (fi == id) {
                    fila = i;
                    break;
                }
            }
        }
        return fila;
    }

    private boolean eliminarDeTablaProductos(int fila) {
        int stock = (Integer) tblProductosSeleccionados.getValueAt(fila, 3);
        if (stock - 1 == 0) {
            return true;
        }
        return false;
    }

    private void cargarDetalleVenta() {
        this.txtSubtotal.setText(Float.toString(subTotal));
    }

    private void llenarLista() {
        this.listaProductos = controlProductos.buscarTodas("");
    }

    private void llenarTablasProductos() {
        String Busqueda = txtBusqueda.getText();
        DefaultTableModel modelo = (DefaultTableModel) tblProductos.getModel();
        modelo.setRowCount(0);
        for (Producto producto : listaProductos) {
            if (producto.getStock() > 0) {
                modelo.addRow(producto.toArray());
            }
        }
    }

    private void llenarCboxClientes() {
        Cliente seleccioneC = new Cliente();
        seleccioneC.setIdcliente(0);
        seleccioneC.setNombre("Seleccione...");
        cboxClientes.addItem(seleccioneC);
        List<Cliente> clientes = this.controlClientes.buscarTodas("");
        for (Cliente cliente : clientes) {
            cboxClientes.addItem(cliente);
        }
    }

    private void limpiarCampos() {
        this.subTotal=0;
        this.montoTotal=0;
        this.llenarLista();
        this.llenarTablasProductos();
        DefaultTableModel modeloSeleccionado = (DefaultTableModel) tblProductosSeleccionados.getModel();
        modeloSeleccionado.setRowCount(0);
        this.cboxClientes.setSelectedIndex(0);
        this.txtBusqueda.setText("");
        this.txtDescuento.setText("0");
        this.txtMonto.setText("0");
        this.txtSubtotal.setText("0");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegistroVenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAceptar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btGuardar;
    private com.github.lgooddatepicker.components.CalendarPanel calendarPanel1;
    private javax.swing.JLabel categoria;
    private javax.swing.JComboBox<Cliente> cboxClientes;
    private javax.swing.JLabel cliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCboxClientes;
    private javax.swing.JLabel lblDescuento;
    private javax.swing.JPanel lblMontoTotal;
    private javax.swing.JLabel lblcat;
    private javax.swing.JLabel lblcliente;
    private javax.swing.JLabel lblp;
    private javax.swing.JLabel lblpro;
    private javax.swing.JLabel lblve;
    private javax.swing.JLabel producto;
    private javax.swing.JLabel proveedor;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTable tblProductosSeleccionados;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtSubtotal;
    private javax.swing.JLabel ventas;
    private javax.swing.JLabel x;
    // End of variables declaration//GEN-END:variables
}
